"""
5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
При нажатии Enter должна выводиться сумма чисел.
Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
Но если вместо числа вводится специальный символ, выполнение программы завершается.
Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму
этих чисел к полученной ранее сумме и после этого завершить программу.
"""


def is_float(number):
    """Проверяет является ли число вещественным"""
    try:
        float(number)
        return True
    except ValueError:
        return False


def my_sum(my_list, current_sum):
    """Выводит сумму элементов из списка и текущей переданной суммы"""
    s = current_sum
    for elem in my_list:
        s += elem
    return s


# флаги ошибки и окончания суммирования
is_end = False
is_error = False
# переменная, хранящая текущую сумму. Чтобы не использовать глобальную переменную
new_sum = 0
while True:
    user_args_list = input("Вводите числа через пробел. Окончание ввода по символу 'E'\n").split()
    idx = 0
    # перебираем введенные элементы
    for itm in user_args_list:
        # если введены вещественные числа, преобразовываем их в списке
        if is_float(itm):
            user_args_list[idx] = float(itm)
            idx += 1
        # если встречается символ окончания ввода, устанавливаем соответствующий флаг
        elif itm == 'E':
            is_end = True
            break
        # если введены некорректные значения и это не символ окончания ввода, то устанавливаем флаг ошибки
        else:
            print('Введены некорректные значения')
            is_error = True
            break
    # если числа введены без ошибки и без символа конца ввода
    if not is_error and not is_end:
        new_sum = my_sum(user_args_list, new_sum)
        print(f'Сумма введенных чисел: {new_sum}.')
    # если введен символ окончания ввода, суммируем с последними введенными элементами и заканчиваем работу
    elif is_end:
        print(f'Окончание работы программы. Финальная сумма чисел: '
              f'{my_sum(user_args_list[:user_args_list.index("E")], new_sum)}.')
        break
    # если возникла ошибка, очищаем текущий список и сбрасываем флаг ошибки, продолжаем ввод
    elif is_error:
        user_args_list.clear()
        is_error = False
